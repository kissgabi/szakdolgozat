/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aSurfaces;

import aControl.XxXx00Control;
import static aGlobal.XxXx00Global.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;

/**
 *
 * @author b6dmin
 */
public class XxXx00GraphityPanel extends javax.swing.JPanel {

    private XxXx00Control c;

    public void setControl(XxXx00Control c) {
        this.c = c;
    }

    public void setup() {
        System.out.println("graphityPanel: "
                + this.getWidth() + "x" + this.getHeight());
    }

    public int graphityWidth() {
        return this.getWidth();
    }

    public int graphityHeight() {
        return this.getHeight();
    }

    /**
     * Creates new form XxXxGraphityPanel
     */
    public XxXx00GraphityPanel() {
        System.out.println("<XxXxGraphityPanel>");
        initComponents();
        super.setPreferredSize(new Dimension(GRAPHITY_WIDTH, GRAPHITY_HEIGHT));
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        switch (state) {
            case PROLOG: {
                g.drawImage(GRAPHITY_PROLOG, 0, 0,
                        this.getWidth(), this.getHeight(), this);
                String str = GRAPHITY_PROLOG_TXT;
                g.setColor(Color.BLACK);
                g.setFont(new Font("Serif", Font.BOLD, 63));
                int width = g.getFontMetrics().stringWidth(str);
                int height = g.getFontMetrics().getHeight();
                g.drawImage(SPRITE, SPRITE_X, SPRITE_Y,
                        SPRITE_WIDTH, SPRITE_HEIGHT, this);
                g.drawString(str,
                        (graphityWidth() - width) / 2,
                        (graphityHeight() - 3 * height / 4) / 2);
                break;
            }
            case EPILOG: {
                g.drawImage(GRAPHITY_FINALE, 0, 0,
                        this.getWidth(), this.getHeight(), this);
                String str = PROCESS_STATE.EPILOG.toString();
                g.setColor(Color.BLACK);
                g.setFont(new Font("Serif", Font.BOLD, 31));
                int width = g.getFontMetrics().stringWidth(str);
                int height = g.getFontMetrics().getHeight();
                g.drawString(str,
                        (graphityWidth() - width) / 2,
                        (graphityHeight() - 3 * height / 4) / 2);

                break;
            }
            case EXIT: {
                g.drawImage(GRAPHITY_FINALE, 0, 0,
                        this.getWidth(), this.getHeight(), this);
                break;
            }
            default: {
                g.drawImage(GRAPHITY_MAIN, 0, 0,
                        this.getWidth(), this.getHeight(), this);
                g.drawImage(SPRITE, SPRITE_X, SPRITE_Y,
                        SPRITE_WIDTH, SPRITE_HEIGHT, this);
            }
        }
        if (c != null) {
            c.drawGraphity(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        c.clickOnGraphity(evt.getX(), evt.getY(), evt.getButton());
    }//GEN-LAST:event_formMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
